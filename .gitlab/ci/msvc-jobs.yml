#-------------------------------------------------------------------------------------------------#
# File:    .gitlab/ci/msvc-jobs.yml
# Author:  Kelly Thompson <kgt@lanl.gov>
# Date:    Monday, Jun 01, 2020, 15:00 pm
# Purpose: gitlab suid runner commands for MSVC (LANL). This script wil be run to test pull
#          requests
# Note:    Copyright (C) 2021 Triad National Security, LLC., All rights reserved.
#-------------------------------------------------------------------------------------------------#

# Setup a "Group Runner" on gitlab.
# 1. The Group owner must navigate to https://gitlab.lanl.gov/groups/jayenne/-/settings/ci_cd and
#    obtain a token
# 2. On the Windows machine use an elevated administrator command prompt to
#    a. install gitlab-runner
#       gitlab-runner.exe stop
#    b. gitlab-runner.exe register
#       gitlab-ci coordinator URL https://gitlab.lanl.gov/
#       gitlab-ci token for this runner: <token>
#       gitlab-ci description for this runner: Win64-MSVC2019
#       gitlab-ci tags for this runner: win64-msvc2019-shell
#       executor: shell
#    c. gitlab-runner.exe start

#-------------------------------------------------------------------------------------------------#
# Machine-wide default job settings
#-------------------------------------------------------------------------------------------------#

---
.msvc22:
  tags:
    - win64-msvc2019-shell
  variables:
    DRACO_BINARY_DIR: ${CI_PROJECT_DIR}\${CMAKE_BUILD_TYPE}
    SITE_ID: pn1809804
    # ${COMPUTERNAME} doesn't seem to work.
    GENERATOR: "Visual Studio 17 2022"
    DEPLOY: "FALSE"
    VCVARS: "C:\\PROGRA~1\\MIB055~1\\2022\\Community\\VC\\Auxiliary\\Build\\vcvars64.bat"
    CMAKE_TOOLCHAIN_FILE: "${CI_PROJECT_DIR}\\.gitlab\\ci\\vs2022-toolchain.cmake"
    MINGW64PATH: "C:\\msys64\\mingw64\\bin"
    CMAKE_C_FLAGS: "/WX"
    CMAKE_Fortran_FLAGS: "-Werror"
    MAXLOAD: 24
    CTEST_NPROC: 24
    SESAMEPATH: "C:\\work\\vendors-ec\\physical_data\\eos"
  artifacts:
    paths:
      - ${CI_PROJECT_DIR}/glr.log

#-------------------------------------------------------------------------------------------------#
# Merge Requests
#-------------------------------------------------------------------------------------------------#

.msvc_merge:
  extends: .msvc22
  variables:
    CTEST_MODE: Experimental
  script:
    #- git.exe config --global --unset http.proxy
    #- git.exe config --global --unset https.proxy
    - cmd.exe /c "%CI_PROJECT_DIR%\.gitlab\ci\gitlab-ci-run-tests.bat"
  rules:
    - if: '$CI_MERGE_REQUEST_LABELS =~ /exclude_msvc/'
      when: never
    - if: '$CI_MERGE_REQUEST_TITLE =~ /Draft:/ || $CI_MERGE_REQUEST_TITLE =~ /WIP:/'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

x64_deb_msvc_22_mr:
  stage: slowtest
  extends: .msvc_merge
  variables:
    CMAKE_BUILD_TYPE: Debug
    COMPILER: msvc-2022
  allow_failure: true

#-------------------------------------------------------------------------------------------------#
# Deploy
#-------------------------------------------------------------------------------------------------#

.msvc_deploy:
  extends: .msvc22
  stage: deploy
  variables:
    DEPLOY: 'TRUE'
    FLAVOR: msvc22-${CMAKE_BUILD_TYPE}
    DRACO_INSTALL_DIR: C:/regress/deployment/draco/${FLAVOR}
    EXTRA_CMAKE_ARGS: -DBUILD_TESTING=OFF
  script:
    - cmd.exe /c "%CI_PROJECT_DIR%\.gitlab\ci\gitlab-ci-run-tests.bat"
  rules:
    # Don't deploy if this is a forked repository.
    - if: '$CI_PROJECT_NAMESPACE != "draco"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: manual
    - if: '$CI_COMMIT_BRANCH == "develop"'
    - if: '$CI_PIPELINE_SOURCE == "web"'

x64_deb_msvc_22_deploy:
  extends: .msvc_deploy
  variables:
    CMAKE_BUILD_TYPE: Debug

x64_rel_msvc_22_deploy:
  extends: .msvc_deploy
  variables:
    CMAKE_BUILD_TYPE: Release

#-------------------------------------------------------------------------------------------------#
# Nightly Regression
#-------------------------------------------------------------------------------------------------#

.msvc_nightly:
  extends: .msvc22
  variables:
    CTEST_MODE: Nightly
    CTEST_BUILD_NAME: Win10-${COMPILER}-${CMAKE_BUILD_TYPE}
    COMPILER: msvc-2022
    GENERATOR: Visual Studio 17 2022
  script:
    - cmd.exe /c "%CI_PROJECT_DIR%\.gitlab\ci\gitlab-nightly-regress.bat"
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'

x64_deb_msvc_22_regress:
  stage: test
  extends: .msvc_nightly
  variables:
    CMAKE_BUILD_TYPE: Debug

x64_rel_msvc_22_regress:
  stage: test
  extends: .msvc_nightly
  variables:
    CMAKE_BUILD_TYPE: Release

#-------------------------------------------------------------------------------------------------#
# end .gitlab/ci/nmsvc-jobs.yml
#-------------------------------------------------------------------------------------------------#
