#!/bin/sh

# ------------------------------------------------------------------------------------------------ #
# File  : compile-elisp
# Author: Kelly Thompson
# Date  : 04 November 2004

# Description:

# This small script will compile all of the local elisp scripts for faster XEmacs execution.

# Usage:
#   ./compile-elisp [-x] [file.el]
#
# Args:
#   -h          Help message
#   -i          Don't do anything, just echo the commands
#   -x          Use XEmacs to compile the elisp files instead of GNU
#               Emacs (default).
#   [file.el]   Compile file.el to file.elc.  If no files are
#               provided, all .el files in the local directory will be
#               compiled.
#-------------------------------------------------------------------------------

# Defaults
EMACS=emacs

# Parse arguments

while getopts "hix" flag; do
    if test "${flag}" = "x"; then
        EMACS=xemacs
    fi
    if test "${flag}" = "i"; then
        echoonly="echo"
    fi
    if test "${flag}" = "h"; then
      echo " "
      echo "This small script will compile all of the local elisp scripts for faster XEmacs"
      echo "execution."
      echo " "
      echo "Usage:"
      echo "  ./compile-elisp [-x] [file.el]"
      echo " "
      echo "Args:"
      echo "  -h          Help message"
      echo "  -i          Only echo the commands, do not actually do anything."
      echo "  -x          Use XEmacs to compile the elisp files instead of GNU Emacs (default). "
      echo "  [file.el]   Compile file.el to file.elc.  If no files are provided, all .el files in"
      echo "              the local directory will be compiled."
      exit 1
    fi
done

setpath=${TMPDIR-/tmp}/elc.$$
echo "(setq load-path (cons \".\" load-path))" > "${setpath}"
if test -n "$1"; then
   $echoonly $EMACS -batch -l "${setpath}" -f batch-byte-compile "$@"
else
   $echoonly $EMACS -batch -l "${setpath}" -f batch-byte-compile ./*.el
fi
$echoonly rm -f "${setpath}"
