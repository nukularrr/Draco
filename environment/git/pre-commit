#!/bin/bash

#--------------------------------------------------------------------------------------------------#
# Git pre-commit hook that runs multiple hooks specified in $HOOKS.  Make sure this script is
# executable. Bypass hooks with git commit --no-verify.
#
# This file is part of a set of unofficial pre-commit hooks available at github.
# Link:    https://github.com/githubbrowser/Pre-commit-hooks
# Contact: David Martin, david.martin.mailbox@googlemail.com
#
#--------------------------------------------------------------------------------------------------#
# CONFIGURATION:
#
# pre-commit hooks to be executed. They should be in the same .git/hooks/ folder as this
# script. Hooks should return 0 if successful and nonzero to cancel the commit. They are executed in
# the order in which they are listed.
HOOKS="pre-commit-clang-format pre-commit-copyright"

# only run autopep8 if the tool is available
[[ $(which autopep8 2> /dev/null | wc -w) -gt 0 ]] && HOOKS+=" pre-commit-autopep8"
# only run flake8 if the tool is available and version is old enough to support install-hooks.
[[ $(which flake8 2> /dev/null | wc -w) -gt 0 ]] && [[ $(flake8 --version | head -n 1 | cut -c1) -lt 4 ]] && HOOKS+=" pre-commit-flake8"
# only run cmake-format if the tool is available.
[[ $(which cmake-format 2> /dev/null | wc -w) -gt 0 ]] && HOOKS+=" pre-commit-cmake-format"
# only run cmake-lint if the tool is available.
[[ $(which cmake-lint 2> /dev/null | wc -w) -gt 0 ]] && HOOKS+=" pre-commit-cmake-lint"
# only run fprettify if the tool is available.
[[ $(which fprettify 2> /dev/null | wc -w) -gt 0 ]] && HOOKS+=" pre-commit-fprettify"

#--------------------------------------------------------------------------------------------------#

#--------------------------------------------------------------------------------------------------#
# There should be no need to change anything below this line.
#--------------------------------------------------------------------------------------------------#
# shellcheck source=environment/git/canonicalize_filename.sh
source "$(dirname -- "$0")/canonicalize_filename.sh"

# exit on error
set -e

# Absolute path to this script, e.g. /home/user/bin/foo.sh
SCRIPT="$(canonicalize_filename "$0")"

# Absolute path this script is in, thus /home/user/bin
SCRIPTPATH="$(dirname -- "$SCRIPT" | head -n 1)"

for hook in $HOOKS; do
  # Run the hook script, if it exists. If it returns with nonzero exit with 1 and thus abort the
  # commit.
  if [ -f "${SCRIPTPATH}/${hook}" ]; then
    if ! "${SCRIPTPATH}/${hook}"; then exit 1; fi
  fi
done

#--------------------------------------------------------------------------------------------------#
# End pre-commit
#--------------------------------------------------------------------------------------------------#
